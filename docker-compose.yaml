version: '3.8'

services:
  # Zipkin for distributed tracing
  zipkin:
    container_name: zipkin-service
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"  # Assurez-vous que ce port est libre

  # Prometheus for monitoring
  prometheus:
    container_name: prometheus-service
    image: prom/prometheus
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # Grafana for visualization
  grafana:
    container_name: grafana-service
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # Elasticsearch for log storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - elk

  # Kibana for log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elk

  # Logstash for log processing
  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    volumes:
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - "5000:5000"  # Pour recevoir les logs de Spring Boot
    depends_on:
      - elasticsearch
    networks:
      - elk

  # Spring Boot application (post-service)
  post-service:
    build:
      context: ./E-learning  # Chemin vers votre Dockerfile
      dockerfile: Dockerfile  # Nom du Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - logstash
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  es_data: